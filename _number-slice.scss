
/**
 * Returns the slice of `$number` starting at index 0 and ending at index `$end-at`.
 *
 * @author - Martin KamÃ­r
 *
 * @example
 * _number-slice(1.198541rem, 4, rem) => 1.19rem;
 * _number-slice(1.198541rem, 6, em) => 1.1985em;
 * @overload __number-slice($number, $start-at: 0, $end-at: 4, $unit: 'rem')
 * @param $number {number} - Number converted to string to be sliced.
 * @param $end-at {number} - The index of the last character of the substring.
 * @param $unit {string} - Unit that will be removed before substring and then add back at returning
 * @return the sliced number with unit
 */
@function _number-slice($number, $end-at: 4, $unit: 'rem') {

	// Checks if value of `$end-at` is equal or less then 1. If so throw error.
	@if ($end-at <= 1) {
		@error 'Value of `$end-at => #{$end-at}` can not be less then `1`'
	}

	$removed-unit : __string-replace($number, $unit);
	$sliced-number : string.slice($removed-unit, 0, $end-at);
	$number : __convert-to-number($sliced-number);

	@return $number + $unit;
}
